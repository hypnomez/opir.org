// Generated by CoffeeScript 1.4.0

/**
 * @package        Elections
 * @category       modules
 * @author         Nazar Mokrynskyi <nazar@mokrynskyi.com>
 * @copyright      Copyright (c) 2014, Nazar Mokrynskyi
 * @license        MIT License, see license.txt
*/


(function() {

  window.cs.elections = window.cs.elections || {};

  window.cs.elections.get_precincts = function(check) {
    var i, precinct, precincts, precincts_new_format, _i, _len, _ref;
    precincts = localStorage.getItem('precincts');
    if (check) {
      return !!precincts;
    }
    precincts = precincts ? JSON.parse(precincts) : {};
    if (precincts[0]) {
      precincts_new_format = {};
      for (_i = 0, _len = precincts.length; _i < _len; _i++) {
        precinct = precincts[_i];
        precincts_new_format[precinct.id] = precinct;
      }
      localStorage.setItem('precincts', JSON.stringify(precincts_new_format));
      precincts = precincts_new_format;
    }
    if ((_ref = precincts[1]) != null ? _ref.id : void 0) {
      precincts_new_format = {};
      for (precinct in precincts) {
        precinct = precincts[precinct];
        precincts_new_format[precinct.id] = [precinct.id, precinct.lat, precinct.lng, precinct.number, precinct.violations];
      }
      localStorage.setItem('precincts', JSON.stringify(precincts_new_format));
      precincts = precincts_new_format;
    }
    for (i in precincts) {
      precinct = precincts[i];
      precincts[i] = {
        id: precinct[0],
        lat: precinct[1],
        lng: precinct[2],
        number: precinct[3],
        violations: precinct[4]
      };
    }
    return precincts;
  };

  window.cs.elections.set_precincts = function(precincts) {
    var i, precinct;
    for (i in precincts) {
      precinct = precincts[i];
      precincts[i] = [precinct.id, precinct.lat, precinct.lng, precinct.number, precinct.violations];
    }
    console.log(precincts);
    return localStorage.setItem('precincts', JSON.stringify(precincts));
  };

  window.cs.elections.get_districts = function(check) {
    var district, districts, districts_new_format, _i, _len;
    districts = localStorage.getItem('districts');
    if (check) {
      return !!districts;
    }
    districts = districts ? JSON.parse(districts) : {};
    if (districts[0]) {
      districts_new_format = {};
      for (_i = 0, _len = districts.length; _i < _len; _i++) {
        district = districts[_i];
        districts_new_format[district.district] = district;
      }
      localStorage.setItem('districts', JSON.stringify(districts_new_format));
      districts = districts_new_format;
    }
    return districts;
  };

  window.cs.elections.loading = function(mode) {
    if (mode === 'show') {
      return $("<div class=\"cs-elections-loading\">\n	<i class=\"uk-icon-spinner uk-icon-spin\"></i>\n</div>").hide().appendTo('body').slideDown();
    } else {
      return setTimeout((function() {
        return $('.cs-elections-loading').slideUp().remove();
      }), 200);
    }
  };

}).call(this);
