// Generated by CoffeeScript 1.4.0

/**
 * @package        Elections
 * @category       modules
 * @author         Nazar Mokrynskyi <nazar@mokrynskyi.com>
 * @copyright      Copyright (c) 2014, Nazar Mokrynskyi
 * @license        MIT License, see license.txt
*/


(function() {

  $(function() {
    var L, violations_container;
    if (cs.module !== 'Moderation' || cs.route_path[0] !== 'violations') {
      return;
    }
    violations_container = $('.cs-moderation');
    L = cs.Language;
    violations_container.html("<h2>" + L.last_violations + "</h2>\n<section></section>").slideDown('fast', function() {
      return $.ajax({
        url: 'api/Moderation/violations/' + cs.route_path[1],
        type: 'get',
        success: function(violations) {
          var ids;
          ids = [];
          (function() {
            var violation, _results;
            _results = [];
            for (violation in violations) {
              violation = violations[violation];
              _results.push(ids.push(violation.precinct));
            }
            return _results;
          })();
          ids = ids.join(',');
          return $.ajax({
            url: "api/Precincts?fields=address,district&id=" + ids,
            type: 'get',
            data: null,
            success: function(addresses_districts_loaded) {
              var addresses, content, districts, images, precinct, precincts, text, time, video, violation, _i, _len;
              addresses = {};
              districts = {};
              (function() {
                var p, _i, _len;
                for (_i = 0, _len = addresses_districts_loaded.length; _i < _len; _i++) {
                  p = addresses_districts_loaded[_i];
                  addresses[p.id] = p.address;
                  districts[p.id] = p.district;
                }
              })();
              content = '';
              precincts = JSON.parse(localStorage.getItem('precincts'));
              for (_i = 0, _len = violations.length; _i < _len; _i++) {
                violation = violations[_i];
                precinct = precincts[violation.precinct];
                time = new Date(violation.date * 1000);
                time = (time.getHours() < 10 ? '0' + time.getHours() : time.getHours()) + ':' + (time.getMinutes() < 10 ? '0' + time.getMinutes() : time.getMinutes());
                text = violation.text ? "<p>" + violation.text.substr(0, 200) + "</p>" : '';
                images = violation.images.length ? violation.images.map(function(image) {
                  return "<figure class=\"uk-vertical-align\"><img src=\"" + image + "\" alt=\"\" class=\"uk-vertical-align-middle\"></figure>";
                }).join('') : '';
                video = violation.video ? "<iframe src=\"" + violation.video + "\" frameborder=\"0\" scrolling=\"no\"></iframe>" : '';
                content += ("<article data-id=\"" + violation.id + "\">\n<h3>\n	" + time + "\n	<span>") + L.precint_number(precinct.number) + ("</span> (" + L.district + " " + districts[precinct.id] + ")\n	</h3>\n	<p>" + addresses[precinct.id] + "</p>\n	" + text + "\n	" + images + "\n	" + video + "\n	<p class=\"uk-text-center\">\n		<button class=\"cs-moderation-approve\" data-id=\"" + violation.id + "\">" + L.approve + "</button>\n		<button class=\"cs-moderation-decline\" data-id=\"" + violation.id + "\">" + L.decline + "</button>\n	</p>\n</article>");
              }
              if (content) {
                return violations_container.children('section').append(content).masonry({
                  columnWidth: 300,
                  gutter: 20,
                  itemSelector: 'article'
                });
              } else {
                return violations_container.append("<p class=\"uk-text-center\">" + L.empty + "</p>");
              }
            },
            error: function() {
              return console.error('Precincts addresses loading error');
            }
          });
        },
        error: function() {
          return violations_container.append("<p class=\"uk-text-center\">" + L.empty + "</p>");
        }
      });
    });
    return violations_container.on('click', 'img', function() {
      return $("<div>\n	<div style=\"text-align: center; width: 90%;\">\n		" + this.outerHTML + "\n	</div>\n</div>").appendTo('body').cs().modal('show').click(function() {
        return $(this).hide();
      }).on('uk.modal.hide', function() {
        return $(this).remove();
      });
    }).on('click', '.cs-moderation-approve, .cs-moderation-decline', function() {
      var $this, id, status;
      $this = $(this);
      status = $this.hasClass('cs-moderation-approve') ? 1 : 0;
      id = $this.data('id');
      return $.ajax({
        url: "api/Moderation/violations/" + id,
        data: {
          status: status
        },
        type: 'put',
        success: function() {
          return $this.parentsUntil('section').css('visibility', 'hidden');
        }
      });
    });
  });

}).call(this);
