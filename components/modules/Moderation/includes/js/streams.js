// Generated by CoffeeScript 1.4.0

/**
 * @package        Elections
 * @category       modules
 * @author         Nazar Mokrynskyi <nazar@mokrynskyi.com>
 * @copyright      Copyright (c) 2014, Nazar Mokrynskyi
 * @license        MIT License, see license.txt
*/


(function() {

  $(function() {
    var L, check_new_streams, streams_container;
    if (cs.module !== 'Moderation' || cs.route_path[0] !== 'streams') {
      return;
    }
    streams_container = $('.cs-moderation');
    L = cs.Language;
    streams_container.html("<h2>" + L.streams_need_checking + "</h2>\n<section></section>");
    $.ajax({
      url: 'api/Moderation/streams/' + cs.route_path[1],
      type: 'get',
      success: function(streams) {
        var ids;
        if (!streams.length) {
          streams_container.append("<p class=\"uk-text-center\">" + L.empty + "</p>");
          return;
        }
        ids = [];
        (function() {
          var violation, _results;
          _results = [];
          for (violation in streams) {
            violation = streams[violation];
            _results.push(ids.push(violation.precinct));
          }
          return _results;
        })();
        ids = ids.join(',');
        return $.ajax({
          url: "api/Precincts?fields=address,district&id=" + ids,
          type: 'get',
          data: null,
          success: function(addresses_districts_loaded) {
            var addresses, content, districts, precinct, precincts, time, video, violation, _i, _len;
            addresses = {};
            districts = {};
            (function() {
              var p, _i, _len;
              for (_i = 0, _len = addresses_districts_loaded.length; _i < _len; _i++) {
                p = addresses_districts_loaded[_i];
                addresses[p.id] = p.address;
                districts[p.id] = p.district;
              }
            })();
            content = '';
            precincts = JSON.parse(localStorage.getItem('precincts'));
            for (_i = 0, _len = streams.length; _i < _len; _i++) {
              violation = streams[_i];
              precinct = precincts[violation.precinct];
              time = new Date(violation.added * 1000);
              time = (time.getHours() < 10 ? '0' + time.getHours() : time.getHours()) + ':' + (time.getMinutes() < 10 ? '0' + time.getMinutes() : time.getMinutes());
              video = "<iframe src=\"" + violation.stream_url + "\" frameborder=\"0\" scrolling=\"no\"></iframe>";
              content += ("<article data-id=\"" + violation.id + "\">\n<h3>\n	" + time + "\n	<span>") + L.precint_number(precinct.number) + ("</span> (" + L.district + " " + districts[precinct.id] + ")\n	</h3>\n	<p>" + addresses[precinct.id] + "</p>\n	" + video + "\n	<p class=\"uk-text-center\">\n		<button class=\"cs-moderation-approve\" data-id=\"" + violation.id + "\">" + L.approve + "</button>\n		<button class=\"cs-moderation-decline\" data-id=\"" + violation.id + "\">" + L.decline + "</button>\n	</p>\n</article>");
            }
            if (content) {
              streams_container.children('section').append(content).masonry({
                columnWidth: 300,
                gutter: 20,
                itemSelector: 'article'
              });
              return setTimeout(check_new_streams, 1000);
            } else {
              return streams_container.append("<p class=\"uk-text-center\">" + L.empty + "</p>");
            }
          },
          error: function() {
            return console.error('Precincts addresses loading error');
          }
        });
      },
      error: function() {
        return streams_container.append("<p class=\"uk-text-center\">" + L.empty + "</p>");
      }
    });
    streams_container.on('click', 'img', function() {
      return $("<div>\n	<div style=\"text-align: center; width: 90%;\">\n		" + this.outerHTML + "\n	</div>\n</div>").appendTo('body').cs().modal('show').click(function() {
        return $(this).hide();
      }).on('uk.modal.hide', function() {
        return $(this).remove();
      });
    }).on('click', '.cs-moderation-approve, .cs-moderation-decline', function() {
      var $this, id, status;
      $this = $(this);
      status = $this.hasClass('cs-moderation-approve') ? 1 : 0;
      id = $this.data('id');
      return $.ajax({
        url: "api/Moderation/streams/" + id,
        data: {
          status: status
        },
        type: 'put',
        success: function() {
          return $this.parentsUntil('section').css('visibility', 'hidden');
        }
      });
    });
    if (cs.route_path[1] === 'new') {
      return check_new_streams = function() {
        return $.ajax({
          url: 'api/Moderation/streams/' + cs.route_path[1],
          type: 'get',
          success: function(streams) {
            var current_available, shown_streams;
            current_available = streams.map(function(violation) {
              return violation.id;
            });
            shown_streams = streams_container.children('section').children('article');
            shown_streams.each(function() {
              var $this;
              $this = $(this);
              if (current_available.indexOf(parseInt($this.data('id'))) === -1) {
                return $this.css('visibility', 'hidden');
              }
            });
            if (shown_streams.length) {
              return setTimeout(check_new_streams, 1000);
            }
          },
          error: function() {}
        });
      };
    }
  });

}).call(this);
